#if 0
;
; Note: shader requires additional functionality:
;       UAVs at every shader stage
;
;
; Buffer Definitions:
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; inputTexture                      texture     f32     1darray      T0             t1     1
; outputBuffer                          UAV    byte         r/w      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RWByteAddressBuffer = type { i32 }
%"class.Texture1DArray<vector<float, 4> >" = type { <4 x float>, %"class.Texture1DArray<vector<float, 4> >::mips_type" }
%"class.Texture1DArray<vector<float, 4> >::mips_type" = type { i32 }
%struct.EmptyPayload = type { i32 }
%dx.types.Handle = type { i8* }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }

@"\01?outputBuffer@@3URWByteAddressBuffer@@A" = external constant %struct.RWByteAddressBuffer, align 4
@"\01?inputTexture@@3V?$Texture1DArray@V?$vector@M$03@@@@A" = external constant %"class.Texture1DArray<vector<float, 4> >", align 4

; Function Attrs: nounwind
define void @"\01?miss@@YAXUEmptyPayload@@@Z"(%struct.EmptyPayload* noalias %payload) #0 {
  %.0 = alloca i32
  %1 = alloca [4 x float]
  %2 = alloca [4 x float]
  %3 = load %"class.Texture1DArray<vector<float, 4> >", %"class.Texture1DArray<vector<float, 4> >"* @"\01?inputTexture@@3V?$Texture1DArray@V?$vector@M$03@@@@A"
  %4 = load %struct.RWByteAddressBuffer, %struct.RWByteAddressBuffer* @"\01?outputBuffer@@3URWByteAddressBuffer@@A"
  %5 = getelementptr inbounds %struct.EmptyPayload, %struct.EmptyPayload* %payload, i32 0, i32 0
  %6 = load i32, i32* %5
  store i32 %6, i32* %.0
  %7 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture1DArray<vector<float, 4> >"(i32 160, %"class.Texture1DArray<vector<float, 4> >" %3)  ; CreateHandleForLib(Resource)
  %TextureLoad = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %7, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %8 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 0
  %9 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 1
  %10 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 2
  %11 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 3
  %12 = getelementptr inbounds [4 x float], [4 x float]* %1, i32 0, i32 0
  store float %8, float* %12
  %13 = getelementptr inbounds [4 x float], [4 x float]* %1, i32 0, i32 1
  store float %9, float* %13
  %14 = getelementptr inbounds [4 x float], [4 x float]* %1, i32 0, i32 2
  store float %10, float* %14
  %15 = getelementptr inbounds [4 x float], [4 x float]* %1, i32 0, i32 3
  store float %11, float* %15
  %16 = getelementptr inbounds [4 x float], [4 x float]* %1, i32 0, i32 0
  %17 = load float, float* %16
  %18 = getelementptr inbounds [4 x float], [4 x float]* %1, i32 0, i32 1
  %19 = load float, float* %18
  %20 = getelementptr inbounds [4 x float], [4 x float]* %1, i32 0, i32 2
  %21 = load float, float* %20
  %22 = getelementptr inbounds [4 x float], [4 x float]* %1, i32 0, i32 3
  %23 = load float, float* %22
  %24 = getelementptr inbounds [4 x float], [4 x float]* %2, i32 0, i32 0
  store float %17, float* %24
  %25 = getelementptr inbounds [4 x float], [4 x float]* %2, i32 0, i32 1
  store float %19, float* %25
  %26 = getelementptr inbounds [4 x float], [4 x float]* %2, i32 0, i32 2
  store float %21, float* %26
  %27 = getelementptr inbounds [4 x float], [4 x float]* %2, i32 0, i32 3
  store float %23, float* %27
  %28 = getelementptr inbounds [4 x float], [4 x float]* %2, i32 0, i32 0
  %29 = load float, float* %28
  %30 = getelementptr inbounds [4 x float], [4 x float]* %2, i32 0, i32 1
  %31 = load float, float* %30
  %32 = getelementptr inbounds [4 x float], [4 x float]* %2, i32 0, i32 2
  %33 = load float, float* %32
  %34 = getelementptr inbounds [4 x float], [4 x float]* %2, i32 0, i32 3
  %35 = load float, float* %34
  %.i0 = bitcast float %29 to i32
  %.i1 = bitcast float %31 to i32
  %.i2 = bitcast float %33 to i32
  %.i3 = bitcast float %35 to i32
  %36 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RWByteAddressBuffer(i32 160, %struct.RWByteAddressBuffer %4)  ; CreateHandleForLib(Resource)
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %36, i32 0, i32 undef, i32 %.i0, i32 %.i1, i32 %.i2, i32 %.i3, i8 15)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  %37 = getelementptr inbounds %struct.EmptyPayload, %struct.EmptyPayload* %payload, i32 0, i32 0
  %38 = load i32, i32* %.0
  store i32 %38, i32* %37
  ret void
}

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.RWByteAddressBuffer(i32, %struct.RWByteAddressBuffer) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture1DArray<vector<float, 4> >"(i32, %"class.Texture1DArray<vector<float, 4> >") #1

; Function Attrs: nounwind
declare void @dx.op.bufferStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i8) #2

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!10, !20}
!dx.entryPoints = !{!25, !27}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 1}
!2 = !{i32 0, i32 0}
!3 = !{!"lib", i32 6, i32 1}
!4 = !{!5, !8, null, null}
!5 = !{!6}
!6 = !{i32 0, %"class.Texture1DArray<vector<float, 4> >"* @"\01?inputTexture@@3V?$Texture1DArray@V?$vector@M$03@@@@A", !"inputTexture", i32 0, i32 1, i32 1, i32 6, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{!9}
!9 = !{i32 0, %struct.RWByteAddressBuffer* @"\01?outputBuffer@@3URWByteAddressBuffer@@A", !"outputBuffer", i32 0, i32 0, i32 1, i32 11, i1 false, i1 false, i1 false, null}
!10 = !{i32 0, %struct.RWByteAddressBuffer undef, !11, %struct.EmptyPayload undef, !13, %"class.Texture1DArray<vector<float, 4> >" undef, !15, %"class.Texture1DArray<vector<float, 4> >::mips_type" undef, !18}
!11 = !{i32 4, !12}
!12 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!13 = !{i32 4, !14}
!14 = !{i32 6, !"i", i32 3, i32 0, i32 7, i32 5}
!15 = !{i32 20, !16, !17}
!16 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!17 = !{i32 6, !"mips", i32 3, i32 16}
!18 = !{i32 4, !19}
!19 = !{i32 6, !"handle", i32 3, i32 0, i32 7, i32 5}
!20 = !{i32 1, void (%struct.EmptyPayload*)* @"\01?miss@@YAXUEmptyPayload@@@Z", !21}
!21 = !{!22, !24}
!22 = !{i32 1, !23, !23}
!23 = !{}
!24 = !{i32 2, !23, !23}
!25 = !{null, !"", null, !4, !26}
!26 = !{i32 0, i64 65553}
!27 = !{void (%struct.EmptyPayload*)* @"\01?miss@@YAXUEmptyPayload@@@Z", !"\01?miss@@YAXUEmptyPayload@@@Z", null, null, !28}
!28 = !{i32 8, i32 11, i32 6, i32 4}

#endif

const unsigned char g_pReadDataTexture1DArray[] = {
  0x44, 0x58, 0x42, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x34, 0x0b, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x44, 0x41, 0x54, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0xb0, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65,
  0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
  0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x00, 0x01, 0x3f, 0x6d, 0x69, 0x73,
  0x73, 0x40, 0x40, 0x59, 0x41, 0x58, 0x55, 0x45, 0x6d, 0x70, 0x74, 0x79,
  0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x40, 0x40, 0x40, 0x5a, 0x00,
  0x6d, 0x69, 0x73, 0x73, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
  0x60, 0x00, 0x0b, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0xe8, 0x09, 0x00, 0x00, 0x61, 0x00, 0x06, 0x00,
  0x7a, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x01, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xd0, 0x09, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x1b, 0x88, 0x20, 0x00,
  0x92, 0x0d, 0xe0, 0x21, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x00, 0x48, 0x04,
  0x39, 0xa4, 0xc3, 0x3c, 0x84, 0x83, 0x38, 0xb0, 0x43, 0x39, 0xb4, 0x01,
  0x3d, 0x84, 0x43, 0x3a, 0xb0, 0x43, 0x1b, 0x8c, 0x43, 0x38, 0xb0, 0x03,
  0x3b, 0xcc, 0x03, 0x60, 0x0e, 0xe1, 0xc0, 0x0e, 0xf3, 0x50, 0x0e, 0x00,
  0xc1, 0x0e, 0xe5, 0x30, 0x0f, 0xf3, 0xd0, 0x06, 0xf0, 0x20, 0x0f, 0xe5,
  0x30, 0x0e, 0xe9, 0x30, 0x0f, 0xe5, 0xd0, 0x06, 0xe6, 0x00, 0x0f, 0xed,
  0x10, 0x0e, 0xe4, 0x00, 0x98, 0x43, 0x38, 0xb0, 0xc3, 0x3c, 0x94, 0x03,
  0x40, 0xb8, 0xc3, 0x3b, 0xb4, 0x81, 0x39, 0xc8, 0x43, 0x38, 0xb4, 0x43,
  0x39, 0xb4, 0x01, 0x3c, 0xbc, 0x43, 0x3a, 0xb8, 0x03, 0x3d, 0x94, 0x83,
  0x3c, 0xb4, 0x41, 0x39, 0xb0, 0x43, 0x3a, 0xb4, 0x03, 0x60, 0x0e, 0xe1,
  0xc0, 0x0e, 0xf3, 0x50, 0x0e, 0x00, 0xe1, 0x0e, 0xef, 0xd0, 0x06, 0xe9,
  0xe0, 0x0e, 0xe6, 0x30, 0x0f, 0x6d, 0x60, 0x0e, 0xf0, 0xd0, 0x06, 0xed,
  0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x80, 0x39, 0x84, 0x03, 0x3b, 0xcc, 0x43,
  0x39, 0x00, 0x84, 0x3b, 0xbc, 0x43, 0x1b, 0xb8, 0x43, 0x38, 0xb8, 0xc3,
  0x3c, 0xb4, 0x81, 0x39, 0xc0, 0x43, 0x1b, 0xb4, 0x43, 0x38, 0xd0, 0x03,
  0x3a, 0x00, 0xe6, 0x10, 0x0e, 0xec, 0x30, 0x0f, 0xe5, 0x00, 0x0c, 0xee,
  0xf0, 0x0e, 0x6d, 0x20, 0x0f, 0xe5, 0x10, 0x0e, 0xec, 0x90, 0x0e, 0xe7,
  0xe0, 0x0e, 0x6d, 0x30, 0x0f, 0xf4, 0x10, 0x0e, 0xe3, 0xb0, 0x0e, 0x00,
  0x31, 0x0f, 0xf4, 0x10, 0x0e, 0xe3, 0xb0, 0x0e, 0x6d, 0x00, 0x0f, 0xf2,
  0xf0, 0x0e, 0xf4, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x6d,
  0x20, 0x0e, 0xf5, 0x60, 0x0e, 0xe6, 0x50, 0x0e, 0xf2, 0xd0, 0x06, 0xf3,
  0x90, 0x0e, 0xfa, 0x50, 0x0e, 0x00, 0x1c, 0x00, 0x44, 0x3d, 0xb8, 0xc3,
  0x3c, 0x84, 0x83, 0x39, 0x94, 0x43, 0x1b, 0x98, 0x03, 0x3c, 0xb4, 0x41,
  0x3b, 0x84, 0x03, 0x3d, 0xa0, 0x03, 0x60, 0x0e, 0xe1, 0xc0, 0x0e, 0xf3,
  0x50, 0x0e, 0x00, 0x51, 0x0f, 0xf3, 0x50, 0x0e, 0x6d, 0x30, 0x0f, 0xef,
  0x60, 0x0e, 0xf4, 0xd0, 0x06, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4,
  0x00, 0x98, 0x43, 0x38, 0xb0, 0xc3, 0x3c, 0x94, 0x03, 0xb0, 0xc1, 0x18,
  0xfe, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x24, 0xa0, 0xda, 0x40, 0x10, 0xff,
  0xff, 0xff, 0xff, 0x3f, 0x00, 0x12, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x84, 0x40, 0x98, 0x10, 0x0c, 0x13, 0x02,
  0x02, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x80, 0xc1, 0x1c, 0x01, 0x18, 0x9c, 0x26,
  0x4d, 0x11, 0x25, 0x4c, 0xfe, 0x0a, 0x6f, 0xd8, 0x44, 0x68, 0xc3, 0x10,
  0x11, 0x92, 0xb4, 0x51, 0x45, 0x41, 0x44, 0x28, 0x00, 0x28, 0x98, 0x01,
  0x18, 0x46, 0x20, 0x86, 0x99, 0xe4, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6,
  0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4,
  0xa1, 0x1c, 0xe2, 0x80, 0x14, 0x42, 0x41, 0x1e, 0xe4, 0x21, 0x1c, 0xf2,
  0x81, 0x0f, 0xec, 0xa1, 0x1c, 0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xf8,
  0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xd8, 0x00, 0x0c, 0xe8,
  0xc0, 0x0f, 0xc0, 0xc0, 0x0f, 0xf4, 0x40, 0x0f, 0xda, 0x21, 0x1d, 0xe0,
  0x61, 0x1e, 0x7e, 0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca, 0x01, 0x05, 0xc0,
  0x4c, 0x67, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x40,
  0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x71, 0x40,
  0x0a, 0xa1, 0x20, 0x0f, 0xf2, 0x10, 0x0e, 0xf9, 0xc0, 0x07, 0xf6, 0x50,
  0x0e, 0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0,
  0x0e, 0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0,
  0x07, 0x48, 0x20, 0x0a, 0x32, 0x46, 0x00, 0x6e, 0x92, 0xa6, 0x88, 0x12,
  0x26, 0xdf, 0x63, 0x9e, 0x09, 0x4b, 0x01, 0x6c, 0x71, 0x80, 0x01, 0x05,
  0x00, 0x25, 0x45, 0x40, 0x14, 0x5a, 0x6e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e,
  0x42, 0xf2, 0x57, 0x42, 0x5a, 0x89, 0xc9, 0x2f, 0x6e, 0x1b, 0x15, 0xc3,
  0x30, 0x0c, 0xc0, 0x1c, 0x01, 0x42, 0xce, 0x3d, 0xc3, 0xe5, 0x4f, 0xd8,
  0x43, 0x48, 0x7e, 0x08, 0x34, 0xc3, 0x42, 0xa0, 0xe0, 0x29, 0x4a, 0x03,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x54, 0x06, 0x08, 0x08, 0x68,
  0x2a, 0x03, 0x04, 0x18, 0x54, 0x15, 0x05, 0x01, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x70, 0xe8, 0x1a, 0x08, 0x98, 0x23, 0x08, 0xe6, 0x08, 0x40, 0x81,
  0x80, 0x24, 0x18, 0xa8, 0xa3, 0x01, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x64, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x66,
  0x00, 0xc0, 0xf4, 0x00, 0x80, 0x87, 0x3c, 0x0b, 0x00, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x22, 0x20, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x4c, 0x40, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xa9, 0x80,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x73,
  0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16,
  0x08, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x4a, 0x60, 0x04, 0xa0, 0x18, 0x4a, 0xa2, 0x2c, 0x0a, 0xa1, 0x0c, 0xca,
  0xa1, 0x14, 0x0a, 0xa5, 0x40, 0x8a, 0xa0, 0x20, 0x68, 0x2b, 0x51, 0x40,
  0x04, 0xd2, 0x46, 0x00, 0xc8, 0x98, 0x01, 0xa0, 0x64, 0x06, 0x80, 0x8a,
  0x19, 0x00, 0x0a, 0x66, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x70, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10,
  0x80, 0x63, 0x83, 0x30, 0x0c, 0x13, 0x04, 0x00, 0xd9, 0x20, 0x14, 0x05,
  0x07, 0xb6, 0x34, 0xb1, 0x09, 0x02, 0x90, 0x6c, 0x18, 0x0e, 0x64, 0x98,
  0x20, 0x1c, 0x01, 0x99, 0x34, 0x37, 0xb8, 0x3a, 0x3a, 0xaa, 0x32, 0x3c,
  0xba, 0x3a, 0xb9, 0xb2, 0x09, 0x02, 0xa0, 0x6c, 0x10, 0x0a, 0x66, 0x43,
  0x52, 0x28, 0x4b, 0x31, 0x0c, 0x48, 0xd1, 0x6c, 0x08, 0x9c, 0x09, 0x82,
  0x00, 0x90, 0x79, 0xab, 0xa3, 0x83, 0xab, 0xa3, 0x13, 0xaa, 0x33, 0x33,
  0x2b, 0x93, 0x9b, 0x20, 0x00, 0xcb, 0x04, 0x41, 0xab, 0x36, 0x2c, 0x05,
  0x14, 0x15, 0xc5, 0x20, 0x4d, 0xd3, 0x04, 0x6c, 0x08, 0xa8, 0x0d, 0xc4,
  0x53, 0x01, 0xc0, 0x04, 0x21, 0xc8, 0x26, 0x08, 0x00, 0xc3, 0x00, 0x6d,
  0x82, 0x00, 0x34, 0x13, 0x04, 0xc0, 0xd9, 0x60, 0x20, 0x99, 0x56, 0x6c,
  0xd8, 0x06, 0x01, 0xe3, 0x26, 0x08, 0xc9, 0xc5, 0x20, 0x6d, 0x82, 0x00,
  0x3c, 0x1b, 0x0c, 0xe4, 0xd3, 0x8a, 0x0d, 0x0c, 0x36, 0x08, 0x58, 0x18,
  0x4c, 0x10, 0x0c, 0x6b, 0x82, 0x00, 0x40, 0x1b, 0x0c, 0x24, 0xd3, 0x8a,
  0x8d, 0x21, 0xd1, 0x96, 0x06, 0x37, 0x37, 0x41, 0x00, 0xa2, 0x0d, 0x04,
  0x62, 0x06, 0xda, 0x19, 0x6c, 0x18, 0xc8, 0xa0, 0x0c, 0xd0, 0x60, 0x82,
  0x50, 0x60, 0x34, 0xd0, 0xc2, 0xdc, 0xc8, 0xd8, 0xca, 0x36, 0x18, 0xc8,
  0x1a, 0x68, 0xc5, 0x06, 0x06, 0x1b, 0x04, 0x8c, 0x0d, 0x36, 0x24, 0xc5,
  0xd5, 0x79, 0x62, 0x30, 0x06, 0x69, 0xa0, 0x06, 0x6d, 0x30, 0x41, 0x60,
  0x84, 0x0d, 0xc0, 0x86, 0x61, 0x80, 0x03, 0x38, 0x98, 0x20, 0x00, 0xd2,
  0x86, 0x41, 0x0e, 0xe0, 0x00, 0x0e, 0x36, 0x08, 0x71, 0x30, 0x07, 0x1b,
  0x86, 0xe1, 0x0d, 0xe8, 0x80, 0xc0, 0x04, 0x61, 0xa3, 0x36, 0x08, 0xc5,
  0x1d, 0x6c, 0x28, 0x00, 0x3b, 0x00, 0x2c, 0x3c, 0x20, 0x17, 0xf0, 0xd3,
  0x96, 0x36, 0x37, 0x07, 0x04, 0x94, 0x15, 0x84, 0x55, 0x55, 0xd4, 0x06,
  0x47, 0x97, 0x07, 0x15, 0x96, 0xc7, 0xf6, 0x16, 0x46, 0x06, 0x04, 0x04,
  0xa4, 0x35, 0x41, 0x00, 0xa6, 0x0d, 0xc4, 0x1e, 0x48, 0x08, 0xb6, 0xa1,
  0x78, 0x03, 0x3d, 0x00, 0x00, 0x3e, 0xa8, 0xc2, 0xc6, 0x66, 0xd7, 0xe6,
  0x92, 0x46, 0x56, 0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9,
  0xd8, 0x95, 0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x86, 0x26, 0x64,
  0x78, 0x2e, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x82, 0xa2, 0x0e,
  0x19, 0x9e, 0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59,
  0x19, 0xdb, 0x94, 0x00, 0x29, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7,
  0x56, 0x27, 0x37, 0x56, 0x36, 0x37, 0x25, 0xa8, 0x2a, 0x91, 0xe1, 0xb9,
  0xd0, 0xe5, 0xc1, 0x95, 0x05, 0xb9, 0xb9, 0xbd, 0xd1, 0x85, 0xd1, 0xa5,
  0xbd, 0xb9, 0xcd, 0x4d, 0x11, 0xda, 0x80, 0x0e, 0xea, 0x90, 0xe1, 0xb9,
  0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9, 0xd1, 0xcd, 0x4d,
  0x11, 0xf0, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07,
  0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87,
  0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87,
  0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x3f, 0x00, 0x00, 0x00, 0x05, 0x80, 0x06, 0x81, 0xdf, 0xbb, 0x4e, 0x87,
  0xd7, 0xe9, 0xc2, 0xba, 0xd9, 0x5c, 0x96, 0x03, 0x81, 0xb3, 0xaa, 0xf4,
  0x2a, 0xcc, 0xd3, 0xcb, 0x41, 0x32, 0x59, 0x5e, 0x9e, 0xcf, 0x85, 0x75,
  0xb3, 0xb9, 0x2c, 0x07, 0x02, 0x83, 0x36, 0x50, 0x0d, 0x97, 0xef, 0x3c,
  0xfe, 0x44, 0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0x7e, 0x71, 0xdb,
  0x15, 0x60, 0x07, 0x81, 0x5f, 0xda, 0x0d, 0xaf, 0xd3, 0xa9, 0x65, 0x3c,
  0xbd, 0x2e, 0x2f, 0x03, 0x81, 0x33, 0xeb, 0x8f, 0x44, 0x2d, 0xe3, 0xe9,
  0x75, 0x79, 0x39, 0x46, 0x0c, 0xca, 0xe5, 0xe1, 0x3c, 0xd0, 0xfa, 0x23,
  0xd9, 0xcb, 0x63, 0xfa, 0x5b, 0x0e, 0x6c, 0x92, 0x60, 0x33, 0x20, 0x10,
  0x08, 0x0c, 0x96, 0x00, 0x17, 0xf8, 0xb5, 0xd3, 0xf3, 0x39, 0x10, 0x98,
  0x0d, 0x62, 0xab, 0xc5, 0x36, 0x9c, 0x9e, 0x87, 0x86, 0xf3, 0xec, 0x77,
  0x98, 0x0c, 0x04, 0x02, 0xb5, 0x46, 0x30, 0x07, 0xc3, 0xe5, 0x3b, 0x8f,
  0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0xf1, 0x39, 0x51,
  0x89, 0x04, 0xbe, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x2b, 0xbc, 0x61, 0x13,
  0xa1, 0x0d, 0x43, 0x44, 0x48, 0xd2, 0x46, 0x15, 0x05, 0x11, 0x55, 0x01,
  0x28, 0x90, 0xf1, 0xae, 0x37, 0xdc, 0x35, 0x96, 0x97, 0xc3, 0xf4, 0x32,
  0x32, 0xec, 0x26, 0xb3, 0xcb, 0xc6, 0xb7, 0x9c, 0x99, 0x16, 0xbb, 0xc6,
  0xec, 0xf0, 0x7c, 0xee, 0xa2, 0x96, 0xf1, 0xf4, 0xba, 0xbc, 0x1c, 0x23,
  0x06, 0xe5, 0xf2, 0x70, 0x9e, 0x67, 0x2f, 0x8f, 0xe9, 0x6f, 0x39, 0xcf,
  0xcc, 0x7e, 0x87, 0xe9, 0x2c, 0x10, 0xcd, 0x07, 0xf2, 0x99, 0x41, 0x35,
  0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0x55, 0x14, 0x44, 0xc4, 0x4e, 0x4e, 0x44,
  0xf8, 0xc8, 0x6d, 0x03, 0x61, 0x20, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0xcc, 0x00, 0x14, 0xb0, 0x40, 0x11, 0x06, 0x94, 0x62, 0x00, 0x39,
  0xe5, 0x01, 0x00, 0x00, 0x33, 0x11, 0x00, 0x70, 0x80, 0xc2, 0x4c, 0x44,
  0x07, 0x1c, 0xa0, 0x30, 0x13, 0xd1, 0x01, 0x07, 0x28, 0x90, 0x18, 0x18,
  0x80, 0xc8, 0x20, 0x00, 0x3b, 0x19, 0x96, 0xae, 0xa3, 0x00, 0x00, 0xc3,
  0x06, 0xc4, 0x11, 0x00, 0xc0, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x54,
  0x62, 0xb0, 0x10, 0x23, 0x06, 0x0d, 0x00, 0x82, 0x60, 0x10, 0x95, 0xc1,
  0x12, 0x80, 0x01, 0x18, 0x80, 0x41, 0xd3, 0x34, 0xcd, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0xee,
  0x06, 0xa6, 0x0c, 0xca, 0x60, 0xd8, 0x80, 0x08, 0x0a, 0x00, 0xd8, 0xdd,
  0xd0, 0x98, 0xc1, 0x19, 0x0c, 0x1b, 0x10, 0x41, 0x01, 0x00, 0xbb, 0x1b,
  0x9c, 0x33, 0xe8, 0x86, 0x0d, 0x88, 0xa0, 0x00, 0x80, 0xdd, 0x0d, 0x0f,
  0x1a, 0x8c, 0xc1, 0xb0, 0x01, 0x11, 0x14, 0x00, 0xb0, 0xbb, 0x01, 0x4a,
  0x83, 0x34, 0xa0, 0x60, 0x00, 0xbb, 0x1b, 0xa4, 0x35, 0x60, 0x03, 0x0a,
  0x06, 0xb0, 0xbb, 0x81, 0x6a, 0x83, 0x31, 0xa0, 0x60, 0x00, 0xbb, 0x1b,
  0xac, 0x37, 0x50, 0x03, 0x0a, 0x06, 0xb0, 0xbb, 0xe1, 0x8a, 0x83, 0x38,
  0x18, 0x36, 0x20, 0x02, 0x04, 0x00, 0x76, 0x37, 0x60, 0x72, 0x30, 0x07,
  0xc3, 0x06, 0x44, 0x70, 0x00, 0xc0, 0xee, 0x86, 0x6c, 0x0e, 0xd2, 0x60,
  0xd8, 0x80, 0x08, 0x0c, 0x00, 0xd8, 0xdd, 0xa0, 0xd1, 0xc1, 0x1b, 0x0c,
  0x1b, 0x10, 0x41, 0x01, 0x00, 0xbb, 0x1b, 0xb6, 0x3a, 0xa8, 0x03, 0x0a,
  0x06, 0xb0, 0xbb, 0xa1, 0xbb, 0x03, 0x3c, 0xa0, 0x60, 0x00, 0xbb, 0x1b,
  0xbe, 0x3c, 0x78, 0x03, 0x0a, 0x06, 0xb0, 0xbb, 0x21, 0x0c, 0xf6, 0xc0,
  0x0e, 0x28, 0x18, 0xc0, 0x1d, 0xc0, 0x9e, 0x01, 0xec, 0x15, 0xc0, 0x1e,
  0x01, 0xec, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x4c, 0xa5, 0xd0, 0x06,
  0x65, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x17, 0x29, 0xb0, 0x41,
  0x20, 0x0a, 0x6f, 0x50, 0x10, 0x83, 0xb0, 0x06, 0x3b, 0x19, 0xe0, 0x40,
  0x14, 0x44, 0x81, 0xd6, 0x00, 0x00, 0xc3, 0x06, 0x84, 0x10, 0x00, 0x00,
  0x86, 0x03, 0x01, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x86, 0xb2, 0xb4, 0xc4,
  0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0x60, 0x45, 0x83, 0x8f, 0xd0, 0x66,
  0x34, 0xf8, 0x48, 0x6d, 0x47, 0x83, 0x8f, 0xd8, 0xa6, 0x71, 0x3c, 0x00,
  0xb6, 0x38, 0xc0, 0x60, 0x48, 0x83, 0x8f, 0xdc, 0x06, 0x22, 0xf8, 0x34,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
