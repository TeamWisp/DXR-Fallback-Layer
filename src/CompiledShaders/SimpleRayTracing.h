#if 0
;
; Note: shader requires additional functionality:
;       UAVs at every shader stage
;
;
; Buffer Definitions:
;
; cbuffer Viewport
; {
;
;   struct Viewport
;   {
;
;       float2 TopLeft;                               ; Offset:    0
;       float2 BottomRight;                           ; Offset:    8
;       int2 Dim;                                     ; Offset:   16
;       uint TestRayFlags;                            ; Offset:   24
;       uint InstanceInclusionMask;                   ; Offset:   28
;   
;   } Viewport                                        ; Offset:    0 Size:    32
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; Viewport                          cbuffer      NA          NA     CB0            cb0     1
; MyAccelerationStructure           texture     i32         ras      T0             t0     1
; RenderTarget                          UAV     f32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RaytracingAccelerationStructure = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%Viewport = type { <2 x float>, <2 x float>, <2 x i32>, i32, i32 }
%dx.types.Handle = type { i8* }
%struct.MyPayload = type { i32 }
%struct.RayDesc = type { <3 x float>, float, <3 x float>, float }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%struct.BuiltInTriangleIntersectionAttributes = type { <2 x float> }

@"\01?MyAccelerationStructure@@3URaytracingAccelerationStructure@@A" = external constant %struct.RaytracingAccelerationStructure, align 4
@"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %"class.RWTexture2D<vector<float, 4> >", align 4
@Viewport = external constant %Viewport

; Function Attrs: nounwind
define void @"\01?RayGen@@YAXXZ"() #0 {
  %payload.0 = alloca i32
  %1 = load %struct.RaytracingAccelerationStructure, %struct.RaytracingAccelerationStructure* @"\01?MyAccelerationStructure@@3URaytracingAccelerationStructure@@A"
  %2 = load %Viewport, %Viewport* @Viewport
  %Viewport = call %dx.types.Handle @dx.op.createHandleForLib.Viewport(i32 160, %Viewport %2)  ; CreateHandleForLib(Resource)
  %3 = alloca %struct.MyPayload
  %4 = alloca [2 x float]
  %5 = alloca [3 x i32]
  %6 = alloca [3 x i32]
  %7 = alloca [3 x float]
  %8 = alloca [3 x float]
  %myRay = alloca %struct.RayDesc, align 4
  %DispatchRaysIndex = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex3 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex4 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 2)  ; DispatchRaysIndex(col)
  %9 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i32 0, i32 0
  store i32 %DispatchRaysIndex, i32* %9
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i32 0, i32 1
  store i32 %DispatchRaysIndex3, i32* %10
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i32 0, i32 2
  store i32 %DispatchRaysIndex4, i32* %11
  %12 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i32 0, i32 0
  %13 = load i32, i32* %12
  %14 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i32 0, i32 1
  %15 = load i32, i32* %14
  %.i0 = uitofp i32 %13 to float
  %.i1 = uitofp i32 %15 to float
  %.i05 = fadd fast float %.i0, 5.000000e-01
  %.i16 = fadd fast float %.i1, 5.000000e-01
  %DispatchRaysDimensions = call i32 @dx.op.dispatchRaysDimensions.i32(i32 146, i8 0)  ; DispatchRaysDimensions(col)
  %DispatchRaysDimensions1 = call i32 @dx.op.dispatchRaysDimensions.i32(i32 146, i8 1)  ; DispatchRaysDimensions(col)
  %DispatchRaysDimensions2 = call i32 @dx.op.dispatchRaysDimensions.i32(i32 146, i8 2)  ; DispatchRaysDimensions(col)
  %16 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i32 0, i32 0
  store i32 %DispatchRaysDimensions, i32* %16
  %17 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i32 0, i32 1
  store i32 %DispatchRaysDimensions1, i32* %17
  %18 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i32 0, i32 2
  store i32 %DispatchRaysDimensions2, i32* %18
  %19 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i32 0, i32 0
  %20 = load i32, i32* %19
  %21 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i32 0, i32 1
  %22 = load i32, i32* %21
  %.i07 = uitofp i32 %20 to float
  %.i18 = uitofp i32 %22 to float
  %.i09 = fdiv fast float %.i05, %.i07
  %.i110 = fdiv fast float %.i16, %.i18
  %23 = getelementptr inbounds [2 x float], [2 x float]* %4, i32 0, i32 0
  store float %.i09, float* %23
  %24 = getelementptr inbounds [2 x float], [2 x float]* %4, i32 0, i32 1
  store float %.i110, float* %24
  %25 = getelementptr inbounds [3 x float], [3 x float]* %7, i32 0, i32 0
  store float 0.000000e+00, float* %25
  %26 = getelementptr inbounds [3 x float], [3 x float]* %7, i32 0, i32 1
  store float 0.000000e+00, float* %26
  %27 = getelementptr inbounds [3 x float], [3 x float]* %7, i32 0, i32 2
  store float 1.000000e+00, float* %27
  %28 = getelementptr inbounds [2 x float], [2 x float]* %4, i32 0, i32 0
  %29 = load float, float* %28
  %30 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Viewport, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.f32 %30, 2
  %32 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Viewport, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %33 = extractvalue %dx.types.CBufRet.f32 %32, 0
  %34 = fsub fast float %31, %33
  %35 = fmul fast float %29, %34
  %36 = fadd fast float %33, %35
  %37 = getelementptr inbounds [2 x float], [2 x float]* %4, i32 0, i32 1
  %38 = load float, float* %37
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Viewport, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 3
  %41 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Viewport, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %42 = extractvalue %dx.types.CBufRet.f32 %41, 1
  %43 = fsub fast float %40, %42
  %44 = fmul fast float %38, %43
  %45 = fadd fast float %42, %44
  %46 = getelementptr inbounds [3 x float], [3 x float]* %8, i32 0, i32 0
  store float %36, float* %46
  %47 = getelementptr inbounds [3 x float], [3 x float]* %8, i32 0, i32 1
  store float %45, float* %47
  %48 = getelementptr inbounds [3 x float], [3 x float]* %8, i32 0, i32 2
  store float 0.000000e+00, float* %48
  %49 = getelementptr inbounds %struct.RayDesc, %struct.RayDesc* %myRay, i32 0, i32 0
  %50 = getelementptr inbounds [3 x float], [3 x float]* %8, i32 0, i32 0
  %51 = load float, float* %50
  %52 = insertelement <3 x float> undef, float %51, i64 0
  %53 = getelementptr inbounds [3 x float], [3 x float]* %8, i32 0, i32 1
  %54 = load float, float* %53
  %55 = insertelement <3 x float> %52, float %54, i64 1
  %56 = getelementptr inbounds [3 x float], [3 x float]* %8, i32 0, i32 2
  %57 = load float, float* %56
  %58 = insertelement <3 x float> %55, float %57, i64 2
  store <3 x float> %58, <3 x float>* %49, align 4
  %59 = getelementptr inbounds %struct.RayDesc, %struct.RayDesc* %myRay, i32 0, i32 1
  store float 0.000000e+00, float* %59, align 4
  %60 = getelementptr inbounds %struct.RayDesc, %struct.RayDesc* %myRay, i32 0, i32 2
  %61 = getelementptr inbounds [3 x float], [3 x float]* %7, i32 0, i32 0
  %62 = load float, float* %61
  %63 = insertelement <3 x float> undef, float %62, i64 0
  %64 = getelementptr inbounds [3 x float], [3 x float]* %7, i32 0, i32 1
  %65 = load float, float* %64
  %66 = insertelement <3 x float> %63, float %65, i64 1
  %67 = getelementptr inbounds [3 x float], [3 x float]* %7, i32 0, i32 2
  %68 = load float, float* %67
  %69 = insertelement <3 x float> %66, float %68, i64 2
  store <3 x float> %69, <3 x float>* %60, align 4
  %70 = getelementptr inbounds %struct.RayDesc, %struct.RayDesc* %myRay, i32 0, i32 3
  store float 1.000000e+04, float* %70, align 4
  store i32 0, i32* %payload.0, align 4
  %71 = getelementptr inbounds %struct.MyPayload, %struct.MyPayload* %3, i32 0, i32 0
  %72 = load i32, i32* %payload.0
  store i32 %72, i32* %71
  %73 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Viewport, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %74 = extractvalue %dx.types.CBufRet.i32 %73, 3
  %75 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Viewport, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %76 = extractvalue %dx.types.CBufRet.i32 %75, 2
  %77 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32 160, %struct.RaytracingAccelerationStructure %1)  ; CreateHandleForLib(Resource)
  %78 = getelementptr %struct.RayDesc, %struct.RayDesc* %myRay, i32 0, i32 0
  %79 = load <3 x float>, <3 x float>* %78
  %80 = extractelement <3 x float> %79, i64 0
  %81 = extractelement <3 x float> %79, i64 1
  %82 = extractelement <3 x float> %79, i64 2
  %83 = getelementptr %struct.RayDesc, %struct.RayDesc* %myRay, i32 0, i32 1
  %84 = load float, float* %83
  %85 = getelementptr %struct.RayDesc, %struct.RayDesc* %myRay, i32 0, i32 2
  %86 = load <3 x float>, <3 x float>* %85
  %87 = extractelement <3 x float> %86, i64 0
  %88 = extractelement <3 x float> %86, i64 1
  %89 = extractelement <3 x float> %86, i64 2
  %90 = getelementptr %struct.RayDesc, %struct.RayDesc* %myRay, i32 0, i32 3
  %91 = load float, float* %90
  call void @dx.op.traceRay.struct.MyPayload(i32 157, %dx.types.Handle %77, i32 %76, i32 %74, i32 0, i32 1, i32 0, float %80, float %81, float %82, float %84, float %87, float %88, float %89, float %91, %struct.MyPayload* %3)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %92 = getelementptr inbounds %struct.MyPayload, %struct.MyPayload* %3, i32 0, i32 0
  %93 = load i32, i32* %92
  store i32 %93, i32* %payload.0
  ret void
}

; Function Attrs: nounwind
define void @"\01?Miss@@YAXUMyPayload@@@Z"(%struct.MyPayload* noalias %payload) #0 {
  %.0 = alloca i32
  %1 = alloca [3 x i32]
  %2 = load %"class.RWTexture2D<vector<float, 4> >", %"class.RWTexture2D<vector<float, 4> >"* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A"
  %3 = getelementptr inbounds %struct.MyPayload, %struct.MyPayload* %payload, i32 0, i32 0
  %4 = load i32, i32* %3
  store i32 %4, i32* %.0
  %DispatchRaysIndex = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex1 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex2 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 2)  ; DispatchRaysIndex(col)
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 0
  store i32 %DispatchRaysIndex, i32* %5
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 1
  store i32 %DispatchRaysIndex1, i32* %6
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 2
  store i32 %DispatchRaysIndex2, i32* %7
  %8 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 0
  %9 = load i32, i32* %8
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 1
  %11 = load i32, i32* %10
  %12 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32 160, %"class.RWTexture2D<vector<float, 4> >" %2)  ; CreateHandleForLib(Resource)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %12, i32 %9, i32 %11, i32 undef, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %13 = getelementptr inbounds %struct.MyPayload, %struct.MyPayload* %payload, i32 0, i32 0
  %14 = load i32, i32* %.0
  store i32 %14, i32* %13
  ret void
}

; Function Attrs: nounwind
define void @"\01?Hit@@YAXUMyPayload@@UBuiltInTriangleIntersectionAttributes@@@Z"(%struct.MyPayload* noalias %payload, %struct.BuiltInTriangleIntersectionAttributes* %attr) #0 {
  %.0 = alloca i32
  %1 = alloca [3 x i32]
  %2 = load %"class.RWTexture2D<vector<float, 4> >", %"class.RWTexture2D<vector<float, 4> >"* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A"
  %3 = getelementptr inbounds %struct.MyPayload, %struct.MyPayload* %payload, i32 0, i32 0
  %4 = load i32, i32* %3
  store i32 %4, i32* %.0
  %DispatchRaysIndex = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex1 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex2 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 2)  ; DispatchRaysIndex(col)
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 0
  store i32 %DispatchRaysIndex, i32* %5
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 1
  store i32 %DispatchRaysIndex1, i32* %6
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 2
  store i32 %DispatchRaysIndex2, i32* %7
  %8 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 0
  %9 = load i32, i32* %8
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i32 0, i32 1
  %11 = load i32, i32* %10
  %12 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32 160, %"class.RWTexture2D<vector<float, 4> >" %2)  ; CreateHandleForLib(Resource)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %12, i32 %9, i32 %11, i32 undef, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %13 = getelementptr inbounds %struct.MyPayload, %struct.MyPayload* %payload, i32 0, i32 0
  %14 = load i32, i32* %.0
  store i32 %14, i32* %13
  ret void
}

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysDimensions.i32(i32, i8) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.MyPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.MyPayload*) #3

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #3

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.Viewport(i32, %Viewport) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32, %struct.RaytracingAccelerationStructure) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32, %"class.RWTexture2D<vector<float, 4> >") #1

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!13, !33}
!dx.entryPoints = !{!41, !43, !45, !47}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 1}
!2 = !{i32 0, i32 0}
!3 = !{!"lib", i32 6, i32 1}
!4 = !{!5, !8, !11, null}
!5 = !{!6}
!6 = !{i32 0, %struct.RaytracingAccelerationStructure* @"\01?MyAccelerationStructure@@3URaytracingAccelerationStructure@@A", !"MyAccelerationStructure", i32 0, i32 0, i32 1, i32 16, i32 0, !7}
!7 = !{i32 0, i32 4}
!8 = !{!9}
!9 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", !"RenderTarget", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !10}
!10 = !{i32 0, i32 9}
!11 = !{!12}
!12 = !{i32 0, %Viewport* @Viewport, !"Viewport", i32 0, i32 0, i32 1, i32 32, null}
!13 = !{i32 0, %struct.RaytracingAccelerationStructure undef, !14, %"class.RWTexture2D<vector<float, 4> >" undef, !16, %struct.RayDesc undef, !18, %struct.MyPayload undef, !23, %struct.BuiltInTriangleIntersectionAttributes undef, !25, %Viewport undef, !27}
!14 = !{i32 4, !15}
!15 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!16 = !{i32 16, !17}
!17 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!18 = !{i32 32, !19, !20, !21, !22}
!19 = !{i32 6, !"Origin", i32 3, i32 0, i32 7, i32 9}
!20 = !{i32 6, !"TMin", i32 3, i32 12, i32 7, i32 9}
!21 = !{i32 6, !"Direction", i32 3, i32 16, i32 7, i32 9}
!22 = !{i32 6, !"TMax", i32 3, i32 28, i32 7, i32 9}
!23 = !{i32 4, !24}
!24 = !{i32 6, !"val", i32 3, i32 0, i32 7, i32 4}
!25 = !{i32 8, !26}
!26 = !{i32 6, !"barycentrics", i32 3, i32 0, i32 7, i32 9}
!27 = !{i32 32, !28, !29, !30, !31, !32}
!28 = !{i32 6, !"TopLeft", i32 3, i32 0, i32 7, i32 9}
!29 = !{i32 6, !"BottomRight", i32 3, i32 8, i32 7, i32 9}
!30 = !{i32 6, !"Dim", i32 3, i32 16, i32 7, i32 4}
!31 = !{i32 6, !"TestRayFlags", i32 3, i32 24, i32 7, i32 5}
!32 = !{i32 6, !"InstanceInclusionMask", i32 3, i32 28, i32 7, i32 5}
!33 = !{i32 1, void ()* @"\01?RayGen@@YAXXZ", !34, void (%struct.MyPayload*)* @"\01?Miss@@YAXUMyPayload@@@Z", !37, void (%struct.MyPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @"\01?Hit@@YAXUMyPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", !39}
!34 = !{!35}
!35 = !{i32 1, !36, !36}
!36 = !{}
!37 = !{!35, !38}
!38 = !{i32 2, !36, !36}
!39 = !{!35, !38, !40}
!40 = !{i32 0, !36, !36}
!41 = !{null, !"", null, !4, !42}
!42 = !{i32 0, i64 65537}
!43 = !{void (%struct.MyPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @"\01?Hit@@YAXUMyPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", !"\01?Hit@@YAXUMyPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", null, null, !44}
!44 = !{i32 8, i32 10, i32 6, i32 4, i32 7, i32 8}
!45 = !{void (%struct.MyPayload*)* @"\01?Miss@@YAXUMyPayload@@@Z", !"\01?Miss@@YAXUMyPayload@@@Z", null, null, !46}
!46 = !{i32 8, i32 11, i32 6, i32 4}
!47 = !{void ()* @"\01?RayGen@@YAXXZ", !"\01?RayGen@@YAXXZ", null, null, !48}
!48 = !{i32 8, i32 7}

#endif

const unsigned char g_pSimpleRayTracing[] = {
  0x44, 0x58, 0x42, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x20, 0x14, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x44, 0x41, 0x54, 0xec, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00,
  0x3c, 0x01, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0xac, 0x00, 0x00, 0x00, 0x00, 0x56, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72,
  0x74, 0x00, 0x4d, 0x79, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
  0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
  0x65, 0x00, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67,
  0x65, 0x74, 0x00, 0x01, 0x3f, 0x52, 0x61, 0x79, 0x47, 0x65, 0x6e, 0x40,
  0x40, 0x59, 0x41, 0x58, 0x58, 0x5a, 0x00, 0x52, 0x61, 0x79, 0x47, 0x65,
  0x6e, 0x00, 0x01, 0x3f, 0x4d, 0x69, 0x73, 0x73, 0x40, 0x40, 0x59, 0x41,
  0x58, 0x55, 0x4d, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x40,
  0x40, 0x40, 0x5a, 0x00, 0x4d, 0x69, 0x73, 0x73, 0x00, 0x01, 0x3f, 0x48,
  0x69, 0x74, 0x40, 0x40, 0x59, 0x41, 0x58, 0x55, 0x4d, 0x79, 0x50, 0x61,
  0x79, 0x6c, 0x6f, 0x61, 0x64, 0x40, 0x40, 0x55, 0x42, 0x75, 0x69, 0x6c,
  0x74, 0x49, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x49,
  0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
  0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x40, 0x40, 0x40,
  0x5a, 0x00, 0x48, 0x69, 0x74, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x63, 0x00, 0x07, 0x00,
  0x46, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x08, 0x00, 0x00, 0x63, 0x00, 0x0b, 0x00, 0x65, 0x00, 0x00, 0x00,
  0xa6, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x0a, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x63, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0xe8, 0x11, 0x00, 0x00, 0x61, 0x00, 0x06, 0x00, 0x7a, 0x04, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x01, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xd0, 0x11, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x71, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x1b, 0xc0, 0x23, 0xf8, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x90, 0x08, 0x72, 0x48, 0x87, 0x79, 0x08, 0x07, 0x71, 0x60, 0x87,
  0x72, 0x68, 0x03, 0x7a, 0x08, 0x87, 0x74, 0x60, 0x87, 0x36, 0x18, 0x87,
  0x70, 0x60, 0x07, 0x76, 0x98, 0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6,
  0xa1, 0x1c, 0x00, 0x82, 0x1d, 0xca, 0x61, 0x1e, 0xe6, 0xa1, 0x0d, 0xe0,
  0x41, 0x1e, 0xca, 0x61, 0x1c, 0xd2, 0x61, 0x1e, 0xca, 0xa1, 0x0d, 0xcc,
  0x01, 0x1e, 0xda, 0x21, 0x1c, 0xc8, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87,
  0x79, 0x28, 0x07, 0x80, 0x70, 0x87, 0x77, 0x68, 0x03, 0x73, 0x90, 0x87,
  0x70, 0x68, 0x87, 0x72, 0x68, 0x03, 0x78, 0x78, 0x87, 0x74, 0x70, 0x07,
  0x7a, 0x28, 0x07, 0x79, 0x68, 0x83, 0x72, 0x60, 0x87, 0x74, 0x68, 0x07,
  0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xc2, 0x1d, 0xde,
  0xa1, 0x0d, 0xd2, 0xc1, 0x1d, 0xcc, 0x61, 0x1e, 0xda, 0xc0, 0x1c, 0xe0,
  0xa1, 0x0d, 0xda, 0x21, 0x1c, 0xe8, 0x01, 0x1d, 0x00, 0x73, 0x08, 0x07,
  0x76, 0x98, 0x87, 0x72, 0x00, 0x08, 0x77, 0x78, 0x87, 0x36, 0x70, 0x87,
  0x70, 0x70, 0x87, 0x79, 0x68, 0x03, 0x73, 0x80, 0x87, 0x36, 0x68, 0x87,
  0x70, 0xa0, 0x07, 0x74, 0x00, 0xcc, 0x21, 0x1c, 0xd8, 0x61, 0x1e, 0xca,
  0x01, 0x18, 0xdc, 0xe1, 0x1d, 0xda, 0x40, 0x1e, 0xca, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xda, 0x60, 0x1e, 0xe8, 0x21, 0x1c, 0xc6,
  0x61, 0x1d, 0x00, 0x62, 0x1e, 0xe8, 0x21, 0x1c, 0xc6, 0x61, 0x1d, 0xda,
  0x00, 0x1e, 0xe4, 0xe1, 0x1d, 0xe8, 0xa1, 0x1c, 0xc6, 0x81, 0x1e, 0xde,
  0x41, 0x1e, 0xda, 0x40, 0x1c, 0xea, 0xc1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x0d, 0xe6, 0x21, 0x1d, 0xf4, 0xa1, 0x1c, 0x00, 0x38, 0x00, 0x88,
  0x7a, 0x70, 0x87, 0x79, 0x08, 0x07, 0x73, 0x28, 0x87, 0x36, 0x30, 0x07,
  0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0xc0, 0x1c, 0xc2,
  0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xa2, 0x1e, 0xe6, 0xa1, 0x1c, 0xda,
  0x60, 0x1e, 0xde, 0xc1, 0x1c, 0xe8, 0xa1, 0x0d, 0xcc, 0x81, 0x1d, 0xde,
  0x21, 0x1c, 0xe8, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07,
  0x60, 0x03, 0x21, 0x04, 0x40, 0xb2, 0xc1, 0x18, 0xfe, 0xff, 0xff, 0xff,
  0x7f, 0x00, 0x24, 0xa0, 0xda, 0x60, 0x10, 0xff, 0xff, 0xff, 0xff, 0x3f,
  0x00, 0x12, 0x40, 0x6d, 0x20, 0x8a, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x82, 0x20, 0x04, 0x13, 0x82, 0x61, 0x42, 0x40, 0x4c,
  0x08, 0x0a, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe8, 0xc1, 0x1c, 0x01, 0x18, 0x9c, 0x19,
  0x48, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x02, 0xd8, 0x14, 0x01, 0x02, 0xd2,
  0x18, 0x9a, 0x20, 0x10, 0x0b, 0x11, 0x01, 0x13, 0xe2, 0x34, 0xec, 0x14,
  0x51, 0xc2, 0x44, 0x45, 0x04, 0x0a, 0x00, 0x0a, 0x66, 0x00, 0x86, 0x11,
  0x88, 0x61, 0x26, 0x32, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07,
  0x37, 0x90, 0x85, 0x5b, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07,
  0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07,
  0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07,
  0x7a, 0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0x40, 0x01,
  0x41, 0xc5, 0x30, 0x82, 0x30, 0x0c, 0x23, 0x08, 0xc0, 0x21, 0x2f, 0x42,
  0x58, 0x8f, 0x13, 0x4d, 0xa8, 0x38, 0x0e, 0x04, 0x00, 0x28, 0x19, 0x01,
  0x28, 0xc1, 0x42, 0xcc, 0x41, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0x9b, 0x58,
  0x0a, 0x60, 0x8b, 0x03, 0x0c, 0x28, 0x00, 0xc8, 0x29, 0xc2, 0xf2, 0x10,
  0x74, 0x6c, 0x20, 0x4d, 0x11, 0x25, 0x4c, 0xfe, 0x46, 0x21, 0xcb, 0x24,
  0x36, 0x6d, 0x84, 0x00, 0x8d, 0xb1, 0x10, 0x62, 0x33, 0x11, 0x91, 0x44,
  0x08, 0x13, 0xe2, 0x34, 0xda, 0x34, 0x45, 0x48, 0x40, 0x4d, 0x84, 0x84,
  0x82, 0x83, 0xa4, 0x32, 0x2c, 0xcf, 0x44, 0xd4, 0x51, 0xc3, 0xe5, 0x4f,
  0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x3e, 0x72, 0xdb,
  0x88, 0x00, 0x00, 0x00, 0x98, 0x23, 0x40, 0xe8, 0xba, 0x67, 0xb8, 0xfc,
  0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14, 0x60, 0x85,
  0xb0, 0x80, 0x0c, 0x20, 0xed, 0xa8, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24,
  0x9f, 0xdb, 0xa8, 0x62, 0x25, 0x26, 0xbf, 0xb8, 0x6d, 0x44, 0x0c, 0xc3,
  0x30, 0x14, 0x82, 0x03, 0x32, 0x80, 0xba, 0x32, 0x00, 0xc0, 0x45, 0x5f,
  0x89, 0x16, 0x20, 0x03, 0x00, 0x00, 0x00, 0x86, 0x61, 0x18, 0x86, 0x61,
  0x18, 0x1e, 0x0a, 0xcb, 0xb2, 0x00, 0x19, 0x00, 0x00, 0xc3, 0x30, 0x0c,
  0x17, 0x8d, 0x65, 0xc8, 0x80, 0x84, 0xca, 0x32, 0x64, 0x40, 0x40, 0x67,
  0x19, 0x32, 0xa0, 0xa0, 0x74, 0x20, 0x60, 0x8e, 0x20, 0x18, 0x46, 0x18,
  0x86, 0x73, 0xa4, 0x29, 0xa2, 0x84, 0xc9, 0x5f, 0x01, 0xac, 0x23, 0x24,
  0x01, 0x11, 0xed, 0xd0, 0x0e, 0x73, 0x04, 0xa0, 0x40, 0x40, 0x0a, 0x0c,
  0x14, 0xe7, 0x00, 0x40, 0x73, 0x0e, 0x0c, 0x54, 0x93, 0x4b, 0x03, 0xb5,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0x84, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0xc6, 0x00, 0x80, 0x59, 0x03,
  0x00, 0x66, 0x0e, 0x00, 0x60, 0xc8, 0xc3, 0x00, 0x00, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x02, 0x00, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x05, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0d, 0x08,
  0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1d,
  0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x3e, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x7c, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0x09, 0x03, 0x20, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0xf2, 0x8c, 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xca, 0x00, 0x08, 0x80, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x67, 0x00, 0x04, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x34, 0x00,
  0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10,
  0x12, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02, 0x4a, 0x60, 0x04, 0xa0,
  0x18, 0x0a, 0xa4, 0x10, 0x8a, 0xa0, 0x24, 0x0a, 0xa8, 0x0c, 0xca, 0xa1,
  0x30, 0x0a, 0xa7, 0x20, 0x0a, 0xa6, 0x14, 0x8a, 0xa2, 0x2c, 0xe8, 0x2d,
  0x41, 0x40, 0x04, 0x62, 0x47, 0x00, 0x28, 0x99, 0x01, 0x20, 0x67, 0x06,
  0x80, 0xa4, 0x19, 0x00, 0x2a, 0x66, 0x00, 0xc8, 0x9d, 0x01, 0xa0, 0x60,
  0x06, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c,
  0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10, 0x80, 0x67, 0x83, 0x30,
  0x0c, 0x13, 0x04, 0x00, 0xda, 0x20, 0x14, 0x05, 0x07, 0xb6, 0x34, 0xb1,
  0x09, 0x02, 0x10, 0x6d, 0x18, 0x0e, 0x64, 0x98, 0x20, 0x08, 0x00, 0xaf,
  0xa6, 0xbc, 0xa0, 0xb1, 0xb1, 0x32, 0xb6, 0x32, 0xb9, 0x30, 0xba, 0xb4,
  0x37, 0xb7, 0x29, 0x3a, 0xb9, 0xba, 0x31, 0xba, 0x3a, 0xb9, 0xb2, 0x09,
  0x02, 0x20, 0x4d, 0x10, 0x80, 0x69, 0x83, 0x50, 0x34, 0x1b, 0x92, 0x42,
  0x59, 0x8a, 0x62, 0x60, 0x0a, 0x67, 0x43, 0xf0, 0x4c, 0x10, 0x8c, 0x80,
  0x8c, 0x54, 0x99, 0x1b, 0x59, 0x99, 0x1c, 0x55, 0x98, 0xdc, 0x59, 0x19,
  0xdd, 0x04, 0x01, 0xa0, 0x26, 0x08, 0x6c, 0x10, 0x06, 0x13, 0x04, 0xa0,
  0xda, 0x20, 0x14, 0xd5, 0x86, 0xa5, 0x88, 0xa4, 0xa2, 0x18, 0x26, 0x8a,
  0xa2, 0xac, 0x0d, 0xc1, 0x35, 0x41, 0x50, 0x04, 0x22, 0x56, 0x69, 0x65,
  0x77, 0x70, 0x6f, 0x72, 0x74, 0x13, 0x04, 0xc0, 0xda, 0x80, 0x14, 0x99,
  0x56, 0x14, 0xc3, 0x06, 0x6c, 0x08, 0xb8, 0x0d, 0x04, 0x84, 0x75, 0xc0,
  0x04, 0x21, 0x38, 0x03, 0x06, 0x68, 0x13, 0x04, 0xe0, 0x9a, 0x20, 0x00,
  0xd8, 0x06, 0x03, 0x01, 0x83, 0x30, 0x28, 0xc4, 0xa0, 0xd9, 0x20, 0x34,
  0x63, 0x30, 0x41, 0x28, 0xca, 0x60, 0x83, 0x81, 0x80, 0x41, 0x18, 0x14,
  0x62, 0x50, 0x6d, 0x10, 0x18, 0x33, 0x98, 0x20, 0xb8, 0x81, 0x19, 0xd0,
  0x78, 0x92, 0x4b, 0x3b, 0x4b, 0x73, 0xdb, 0x60, 0x20, 0x69, 0x10, 0x06,
  0x85, 0x18, 0x54, 0x24, 0xa8, 0x9a, 0xd2, 0xdc, 0x26, 0x08, 0x40, 0xb6,
  0xc1, 0x40, 0xd6, 0x20, 0x0c, 0xd8, 0x40, 0x0c, 0x2a, 0x26, 0x44, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1b, 0x0c, 0xc4, 0x0d, 0xc2,
  0x80, 0x11, 0x83, 0x8a, 0x04, 0x55, 0x53, 0x18, 0xde, 0x04, 0x01, 0xd0,
  0x36, 0x18, 0x08, 0x1c, 0x84, 0x41, 0x1c, 0x88, 0x41, 0xb5, 0xa1, 0xd8,
  0xd4, 0xa0, 0x0d, 0xde, 0x40, 0x0e, 0x26, 0x08, 0xce, 0x18, 0x70, 0xb0,
  0x0b, 0x63, 0xdb, 0x60, 0x20, 0x75, 0x10, 0x06, 0x85, 0x18, 0x34, 0x1b,
  0x84, 0xc6, 0x0e, 0x26, 0x08, 0x12, 0x19, 0x4c, 0x10, 0x80, 0x8d, 0x8c,
  0x58, 0x98, 0x5c, 0xde, 0x58, 0x99, 0x1b, 0x9d, 0x5c, 0xda, 0xd8, 0xdc,
  0x06, 0x03, 0xd1, 0x83, 0x30, 0x28, 0xc4, 0xa0, 0xda, 0x20, 0xe4, 0xc1,
  0x1e, 0x4c, 0x10, 0x12, 0x31, 0xe0, 0x41, 0xf5, 0x06, 0xc7, 0x54, 0x66,
  0x46, 0xb7, 0xc1, 0x40, 0xfc, 0x20, 0x0c, 0x0a, 0x31, 0xa8, 0xb8, 0x08,
  0xbd, 0xd1, 0xd1, 0xbd, 0xb5, 0x49, 0xa5, 0x9d, 0xa1, 0xd1, 0x6d, 0x30,
  0x10, 0x50, 0x08, 0x83, 0x3c, 0x10, 0x83, 0x8a, 0x03, 0x51, 0x5a, 0xdb,
  0x06, 0x03, 0x11, 0x85, 0x30, 0x60, 0xc4, 0xa0, 0x21, 0x43, 0x55, 0x36,
  0x47, 0x27, 0x15, 0x96, 0x67, 0xc4, 0x16, 0x76, 0x36, 0x37, 0x41, 0x00,
  0xb8, 0x09, 0x02, 0xd0, 0x6d, 0x30, 0x10, 0x52, 0x08, 0x83, 0x52, 0x10,
  0x03, 0x53, 0x60, 0x95, 0xe4, 0x36, 0x47, 0x17, 0xe6, 0x36, 0x56, 0x96,
  0xe4, 0x36, 0xc6, 0x56, 0x37, 0x97, 0xf6, 0xe6, 0xd6, 0x14, 0x36, 0xb7,
  0xb6, 0xc1, 0x40, 0x50, 0x21, 0x0c, 0xe2, 0x40, 0x0c, 0x4c, 0x61, 0x83,
  0xb1, 0xfd, 0x41, 0x28, 0x8c, 0xc2, 0x29, 0xa4, 0xc2, 0x86, 0xa6, 0xf8,
  0xc8, 0xa0, 0x0c, 0xce, 0x00, 0x0d, 0xe6, 0x80, 0x0e, 0xee, 0x00, 0x0f,
  0xf8, 0xa0, 0x0f, 0x54, 0x61, 0x82, 0xd0, 0x0c, 0x1b, 0x80, 0x0d, 0xc3,
  0xd0, 0x0a, 0xad, 0xb0, 0x21, 0x70, 0x85, 0x09, 0x42, 0x44, 0x6c, 0x18,
  0xa6, 0x56, 0x68, 0x85, 0x0d, 0x82, 0x2b, 0xc4, 0xc2, 0x04, 0xa1, 0x2a,
  0x36, 0x0c, 0x45, 0x2b, 0xb4, 0xc2, 0x86, 0xc1, 0x15, 0x62, 0x81, 0x16,
  0x36, 0x1c, 0x03, 0x2b, 0xbc, 0x02, 0x2c, 0xc8, 0xc2, 0x2c, 0xd4, 0x02,
  0x81, 0x09, 0xc2, 0x1b, 0x80, 0xc1, 0x06, 0xa1, 0xc0, 0x85, 0x0d, 0x05,
  0x70, 0x0b, 0x80, 0x97, 0x0b, 0x04, 0x85, 0x80, 0x1f, 0xa4, 0x34, 0x3a,
  0x20, 0xa0, 0xac, 0x20, 0xac, 0xaa, 0xa6, 0x3c, 0xa8, 0xb0, 0x3c, 0xb6,
  0xb7, 0x30, 0x32, 0x20, 0xa0, 0x2a, 0xa1, 0xba, 0x34, 0x36, 0xba, 0x24,
  0x37, 0x2a, 0xb9, 0xb4, 0x30, 0xb7, 0x33, 0xb6, 0xb2, 0x24, 0x37, 0xba,
  0x32, 0xb9, 0xb9, 0xb2, 0x31, 0xba, 0xb4, 0x37, 0xb7, 0x20, 0x3a, 0x3a,
  0xb9, 0x34, 0xb1, 0x3a, 0xba, 0xb2, 0x39, 0x20, 0x20, 0x20, 0xad, 0x09,
  0x02, 0xe0, 0x6d, 0x30, 0xf2, 0x80, 0x17, 0x90, 0x46, 0x0c, 0xf2, 0x60,
  0x43, 0x31, 0x0b, 0xbb, 0x00, 0x00, 0xbd, 0xc0, 0x2c, 0xe0, 0xa7, 0x29,
  0x6d, 0x6e, 0x0e, 0x08, 0x28, 0x2b, 0x08, 0xab, 0xaa, 0x29, 0x0f, 0x2a,
  0x2c, 0x8f, 0xed, 0x2d, 0x8c, 0x0c, 0x08, 0x08, 0x48, 0x6b, 0x82, 0x00,
  0x7c, 0x1b, 0x88, 0x3c, 0x00, 0x07, 0xa4, 0xd9, 0x50, 0xc0, 0xc2, 0x2f,
  0x00, 0x40, 0x38, 0xf0, 0x09, 0xf8, 0x91, 0x0a, 0xcb, 0x3b, 0x2a, 0x73,
  0x03, 0x02, 0xca, 0x0a, 0xc2, 0xc2, 0xd2, 0xda, 0x20, 0xe4, 0x81, 0x18,
  0x6c, 0x28, 0x58, 0x61, 0x1c, 0x00, 0x80, 0x1c, 0xaa, 0xb0, 0xb1, 0xd9,
  0xb5, 0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x82, 0x2a, 0x64,
  0x78, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x82, 0xa1,
  0x09, 0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94, 0xa0,
  0xa8, 0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7, 0xf4,
  0x46, 0x56, 0xc6, 0x36, 0x25, 0x40, 0xca, 0x90, 0xe1, 0xb9, 0xc8, 0x95,
  0xcd, 0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xcd, 0x4d, 0x09, 0xba, 0x4a, 0x64,
  0x78, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
  0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x04, 0x55, 0xa8, 0x85, 0x3a, 0x64,
  0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74,
  0x73, 0x53, 0x88, 0x5c, 0xe8, 0x85, 0x70, 0x20, 0x07, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8,
  0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90,
  0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x26, 0x80, 0xbc, 0x08,
  0x61, 0x3d, 0x4e, 0x34, 0x19, 0x02, 0x18, 0x0c, 0x97, 0xef, 0x3c, 0xfe,
  0x80, 0x48, 0x0f, 0x30, 0x09, 0xc7, 0x0a, 0x60, 0x52, 0x87, 0x30, 0x44,
  0x23, 0x21, 0x4e, 0x23, 0xf9, 0xc8, 0x6d, 0xdb, 0xc1, 0x36, 0x5c, 0xbe,
  0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84,
  0x01, 0x08, 0x98, 0x5f, 0xdc, 0x76, 0x05, 0xcc, 0x41, 0xe0, 0x27, 0x2d,
  0xbb, 0xc9, 0x65, 0x39, 0x35, 0x2c, 0x3f, 0x97, 0xe9, 0x40, 0xe0, 0xcc,
  0xfa, 0x23, 0x49, 0xaf, 0xd4, 0x32, 0x9e, 0x5e, 0x97, 0x97, 0x65, 0x44,
  0xa0, 0xf5, 0x47, 0xb2, 0x97, 0xc7, 0xf4, 0xb7, 0x1c, 0xd8, 0x24, 0xc1,
  0x66, 0x40, 0x20, 0x10, 0x18, 0x34, 0x83, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1,
  0x85, 0x80, 0x2a, 0x0a, 0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10,
  0x30, 0x1f, 0xb9, 0x6d, 0x53, 0xf8, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x8a,
  0x00, 0x81, 0x58, 0x01, 0xcc, 0x97, 0xa6, 0x88, 0x12, 0x26, 0xdf, 0xc4,
  0x52, 0x00, 0x5b, 0x1c, 0x60, 0xb0, 0x86, 0x3f, 0x18, 0x2e, 0xdf, 0x79,
  0x7c, 0x21, 0x22, 0x80, 0x89, 0x08, 0x81, 0x66, 0x58, 0x88, 0xcf, 0x89,
  0x4a, 0x24, 0xf0, 0xa5, 0x29, 0xa2, 0x84, 0xc9, 0x5f, 0x01, 0x6c, 0x8a,
  0x00, 0x01, 0x69, 0x0c, 0x4d, 0x10, 0x88, 0x85, 0x88, 0x80, 0x09, 0x71,
  0x1a, 0x76, 0x8a, 0x28, 0x61, 0xa2, 0x22, 0xc2, 0x18, 0xc2, 0x60, 0xb8,
  0x7c, 0xe7, 0xf1, 0x85, 0x88, 0x00, 0x26, 0x22, 0x04, 0x9a, 0x61, 0x21,
  0x3e, 0x27, 0x2a, 0x91, 0xc0, 0x7f, 0x11, 0xc2, 0x7a, 0x9c, 0x68, 0xaa,
  0x81, 0x27, 0xf0, 0x93, 0x86, 0xf3, 0xc7, 0xb2, 0x1b, 0x08, 0xcc, 0x06,
  0xb1, 0x58, 0x6d, 0x11, 0x64, 0x81, 0x5f, 0x33, 0x3d, 0x9f, 0x03, 0x81,
  0xd9, 0x20, 0xb6, 0xda, 0xcc, 0x43, 0xc3, 0x79, 0xf6, 0x3b, 0x4c, 0x06,
  0x02, 0x81, 0x5a, 0x5b, 0xb0, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae,
  0x89, 0x8a, 0x08, 0x76, 0x72, 0x22, 0xc2, 0x2f, 0x6e, 0xbb, 0x1c, 0xfa,
  0x80, 0x8c, 0x77, 0xbd, 0xe1, 0xae, 0xb1, 0xbc, 0x1c, 0xa6, 0x97, 0x91,
  0x61, 0x37, 0x99, 0x5d, 0x36, 0xbe, 0xe5, 0xcc, 0xb4, 0xd8, 0x35, 0x66,
  0x87, 0xe7, 0x73, 0x97, 0xf4, 0x4a, 0x2d, 0xe3, 0xe9, 0x75, 0x79, 0x59,
  0x46, 0xe4, 0xd9, 0xcb, 0x63, 0xfa, 0x5b, 0xce, 0x33, 0xb3, 0xdf, 0x61,
  0x3a, 0x0b, 0x44, 0xf3, 0x81, 0x7c, 0x55, 0x00, 0x0a, 0x81, 0x1f, 0x32,
  0x4d, 0x07, 0x02, 0xb3, 0x41, 0x6c, 0xb5, 0x99, 0x87, 0x86, 0xf3, 0xec,
  0x77, 0x98, 0x0c, 0x04, 0x56, 0x85, 0xf5, 0x34, 0x9b, 0x9e, 0x74, 0x53,
  0xe5, 0xe9, 0xb0, 0xfb, 0xcc, 0x2e, 0x27, 0xdd, 0xf4, 0xb2, 0x7c, 0x5e,
  0x1e, 0xd3, 0xd3, 0x6f, 0x77, 0x90, 0x4e, 0x97, 0xa7, 0xc5, 0x75, 0x7a,
  0x79, 0x0e, 0x04, 0x02, 0xb5, 0x05, 0xf0, 0x07, 0x81, 0x5f, 0x33, 0x1f,
  0x1c, 0x8f, 0xcb, 0xec, 0xb2, 0x3c, 0x4c, 0x4f, 0xbf, 0xdd, 0x53, 0xba,
  0xbc, 0x3e, 0xa6, 0xd7, 0xe5, 0x65, 0x20, 0x70, 0x56, 0x95, 0x86, 0xf3,
  0x74, 0x79, 0x78, 0x9c, 0x76, 0x9f, 0x83, 0xe3, 0x71, 0x99, 0x5d, 0x96,
  0x87, 0xe9, 0xe9, 0xb7, 0x7b, 0x4a, 0x97, 0xd7, 0xc7, 0xf4, 0xba, 0xbc,
  0x0c, 0x04, 0x06, 0x2d, 0x61, 0x1b, 0x2e, 0xdf, 0x79, 0xfc, 0x01, 0x91,
  0x1e, 0x60, 0x12, 0x8e, 0x15, 0xc0, 0x24, 0xb1, 0x19, 0x88, 0xcb, 0x47,
  0x6e, 0x1b, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x04, 0x94, 0x5d, 0x89, 0x0a, 0x14, 0xa9, 0x40, 0x01, 0x0b, 0x94, 0xae,
  0x00, 0xbd, 0x45, 0x50, 0x02, 0x23, 0x00, 0x74, 0x15, 0xc1, 0x08, 0x40,
  0x09, 0xd0, 0x30, 0x46, 0x00, 0x82, 0x30, 0x1e, 0x8e, 0x01, 0xb5, 0x33,
  0x00, 0x34, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xdf, 0x18, 0x01, 0x08,
  0x82, 0x20, 0xfc, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x33, 0x11, 0x00, 0xf0,
  0x80, 0x02, 0xe5, 0x41, 0x00, 0x08, 0x0f, 0x12, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x65, 0xf0, 0x06, 0x50, 0x30, 0x13, 0xe1, 0x00, 0x0f,
  0x28, 0xcc, 0x44, 0xc4, 0x01, 0xf0, 0x80, 0xc2, 0x4c, 0xc4, 0x1c, 0x00,
  0x0f, 0x28, 0xcc, 0x44, 0xcc, 0x01, 0xf0, 0x80, 0xc2, 0x4c, 0x44, 0x1d,
  0x00, 0x0f, 0x28, 0xcc, 0x44, 0xd4, 0x01, 0xf0, 0x80, 0xc2, 0x4c, 0x84,
  0x1b, 0x00, 0xcf, 0x28, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0xa7,
  0x07, 0x9a, 0x34, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xdf, 0x1e, 0x6c,
  0xd2, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x7c, 0x7c, 0xc0, 0x55, 0x7b,
  0x1e, 0x10, 0x3b, 0xb0, 0x83, 0x61, 0x03, 0x22, 0x20, 0x00, 0x60, 0xcf,
  0x43, 0x72, 0x07, 0x78, 0x30, 0x6c, 0x40, 0x04, 0x04, 0x00, 0xec, 0x79,
  0x50, 0xf0, 0x80, 0x0e, 0x86, 0x0d, 0x88, 0x80, 0x00, 0x80, 0x3d, 0x0f,
  0x4b, 0x1e, 0xe4, 0x01, 0x05, 0x00, 0xd8, 0xf3, 0xd0, 0xec, 0x01, 0x1f,
  0x50, 0x00, 0x80, 0x1b, 0x86, 0x3a, 0x61, 0x28, 0x13, 0x32, 0xf8, 0x98,
  0xa0, 0xc1, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xbe, 0x54, 0x38,
  0x03, 0x30, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x4f, 0x15, 0xd0,
  0x00, 0x0c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x5b, 0x85, 0x34,
  0x18, 0x83, 0x3d, 0x0f, 0x15, 0x29, 0x90, 0xc2, 0xb0, 0x01, 0x11, 0x10,
  0x00, 0xb0, 0xe7, 0xc1, 0x2a, 0x05, 0x53, 0x18, 0x36, 0x20, 0x02, 0x02,
  0x00, 0xf6, 0x3c, 0x5c, 0xa6, 0x20, 0x0a, 0xc3, 0x06, 0x44, 0x40, 0x00,
  0xc0, 0x9e, 0x07, 0xec, 0x14, 0x4e, 0x81, 0x02, 0x00, 0xec, 0x79, 0xd0,
  0x52, 0x41, 0x15, 0x28, 0x00, 0xc0, 0x0d, 0x43, 0x9d, 0x30, 0x94, 0x39,
  0x02, 0x7d, 0xcc, 0x11, 0xe8, 0xb3, 0xe3, 0x41, 0x0c, 0x5e, 0xe1, 0x15,
  0x86, 0x0d, 0x88, 0x60, 0x00, 0x80, 0x1d, 0x0f, 0x63, 0x00, 0x0b, 0xb1,
  0x30, 0x6c, 0x40, 0x04, 0x03, 0x00, 0xec, 0x7a, 0x08, 0x83, 0x58, 0x88,
  0x85, 0x61, 0x03, 0x22, 0x58, 0x03, 0x00, 0xd8, 0xf5, 0x20, 0x06, 0xb2,
  0x30, 0x0b, 0xc3, 0x06, 0x44, 0xc0, 0x06, 0x00, 0xb0, 0xeb, 0x61, 0x0c,
  0x66, 0xe1, 0x15, 0x86, 0x0d, 0x88, 0xe0, 0x0d, 0x00, 0x60, 0xc7, 0xc3,
  0x19, 0xd0, 0x02, 0x2d, 0x50, 0x30, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0xe8, 0x7e, 0xc1, 0x0f, 0xd6, 0xc0, 0x16, 0x46, 0x13, 0x02, 0x61,
  0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xba, 0x70, 0x00, 0x85, 0x36, 0xc0,
  0x85, 0xd1, 0x84, 0x00, 0xb0, 0x21, 0x88, 0x8f, 0x19, 0x81, 0x7c, 0x6c,
  0x08, 0xe0, 0xb3, 0xe3, 0x01, 0x0e, 0x7a, 0xc1, 0x17, 0x28, 0x18, 0xc0,
  0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x74, 0xe8, 0x70, 0x0a, 0x74, 0xf0,
  0x0b, 0xa3, 0x09, 0xc1, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x9d,
  0x3a, 0xa4, 0x82, 0x1d, 0x84, 0xc3, 0x68, 0x42, 0x10, 0xd8, 0x10, 0xc4,
  0xc7, 0x8c, 0x40, 0x3e, 0x36, 0x04, 0xf0, 0xd9, 0xf5, 0x50, 0x07, 0xe6,
  0x60, 0x0e, 0xc3, 0x06, 0x44, 0xb0, 0x00, 0xc0, 0xae, 0x07, 0x3b, 0x38,
  0x07, 0x74, 0x18, 0x36, 0x20, 0x82, 0x01, 0x00, 0x76, 0x3d, 0xdc, 0x01,
  0x3a, 0x90, 0xc3, 0xb0, 0x01, 0x11, 0x88, 0x02, 0x00, 0x6c, 0x77, 0xb8,
  0x83, 0x74, 0x48, 0x87, 0x5d, 0x0f, 0x79, 0xa0, 0x0e, 0xea, 0x40, 0xc1,
  0x00, 0xe6, 0x18, 0x50, 0x21, 0x68, 0x85, 0x5d, 0x0f, 0x7c, 0xd0, 0x0e,
  0xee, 0x40, 0xc1, 0x00, 0xe6, 0x18, 0x86, 0x20, 0x16, 0x76, 0x3d, 0xfc,
  0x01, 0x3c, 0xb0, 0x03, 0x05, 0x03, 0x98, 0x63, 0x18, 0x82, 0x5a, 0x18,
  0x36, 0x20, 0x94, 0x60, 0x00, 0xb6, 0x3b, 0x84, 0xc2, 0x3c, 0xd0, 0xc3,
  0xb0, 0x01, 0x11, 0xb4, 0xc2, 0x00, 0x6c, 0x77, 0x10, 0x05, 0x7a, 0x80,
  0x87, 0x5d, 0x0f, 0xa5, 0x50, 0x0f, 0xf5, 0x40, 0xc1, 0x00, 0xe6, 0x18,
  0x66, 0x21, 0xc0, 0x85, 0x5d, 0x0f, 0xa8, 0x80, 0x0f, 0xf9, 0x40, 0xc1,
  0x00, 0xe6, 0x18, 0x86, 0x80, 0x17, 0x76, 0x3d, 0xac, 0xc2, 0x3e, 0xdc,
  0x03, 0x05, 0x03, 0x98, 0x63, 0x18, 0x02, 0x70, 0x18, 0x36, 0x20, 0x94,
  0x60, 0x00, 0xb6, 0x3b, 0xb0, 0x82, 0x3f, 0xdc, 0xc3, 0xb0, 0x01, 0x11,
  0xf0, 0xc2, 0x00, 0x0c, 0x1b, 0x10, 0xb7, 0xf0, 0x0f, 0x03, 0xb0, 0x9d,
  0x61, 0x16, 0xfe, 0xe1, 0x1f, 0x08, 0x17, 0x00, 0x30, 0x6c, 0x40, 0x08,
  0x01, 0x00, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0xb6, 0x12, 0xe9,
  0x60, 0x0b, 0x22, 0x31, 0x9a, 0x10, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0xa0, 0xb5, 0xc4, 0x3a, 0xe0, 0x02, 0x49, 0x8c, 0x26, 0x04, 0xc2,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x9c, 0x01, 0x4a, 0xa8, 0x03, 0x2f,
  0x2c, 0x77, 0xa0, 0x05, 0x93, 0x30, 0x09, 0x0a, 0x5a, 0x30, 0x86, 0x10,
  0xa4, 0xc3, 0x18, 0x82, 0xb0, 0x0e, 0x63, 0x08, 0x43, 0x3b, 0x2c, 0x77,
  0xc8, 0x85, 0x95, 0x60, 0x09, 0x0a, 0x06, 0xb0, 0xdc, 0x61, 0x17, 0x5a,
  0x22, 0x25, 0x28, 0x68, 0xc1, 0x18, 0x42, 0x00, 0x0f, 0x63, 0x08, 0x82,
  0x3c, 0x8c, 0x21, 0x0c, 0xf4, 0xb0, 0xdc, 0x01, 0x1c, 0x64, 0x62, 0x25,
  0x28, 0x18, 0xc0, 0x88, 0x01, 0x05, 0x80, 0x20, 0x18, 0x84, 0x81, 0x4e,
  0xe0, 0xc3, 0x03, 0x49, 0x34, 0x51, 0x13, 0x34, 0xc1, 0x2c, 0x0a, 0x52,
  0x10, 0x43, 0x80, 0x0e, 0xdb, 0x19, 0xd0, 0x81, 0x26, 0x68, 0x82, 0x02,
  0x00, 0x0c, 0x1b, 0x10, 0xee, 0x10, 0x00, 0x00, 0x86, 0x03, 0x01, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0xb6, 0x83, 0xbc, 0x08, 0x61, 0x3d, 0x4e, 0x34,
  0x19, 0x17, 0xe1, 0x23, 0x35, 0x6f, 0x5d, 0x84, 0x8f, 0xd0, 0xbd, 0x35,
  0x0d, 0x3e, 0x42, 0xdb, 0x50, 0xd4, 0x21, 0xd2, 0x03, 0x4c, 0xc2, 0xb1,
  0x02, 0x98, 0x24, 0x36, 0x03, 0x71, 0x59, 0x94, 0xd5, 0x21, 0xd2, 0x03,
  0x4c, 0xc2, 0xb1, 0x02, 0x98, 0xd4, 0x21, 0x0c, 0xd1, 0x48, 0x88, 0xd3,
  0x48, 0xe6, 0x55, 0xf8, 0x48, 0x5d, 0xd3, 0x86, 0x93, 0x3c, 0x00, 0xb6,
  0x38, 0xc0, 0xe0, 0xd3, 0xe6, 0x34, 0xf8, 0x48, 0x6d, 0x42, 0x05, 0x83,
  0xad, 0x00, 0x66, 0x52, 0x57, 0x87, 0x48, 0x0f, 0x30, 0x09, 0xc7, 0x0a,
  0x60, 0x52, 0x87, 0x30, 0x44, 0x23, 0x21, 0x4e, 0x23, 0xd5, 0x36, 0x75,
  0x75, 0x88, 0xf4, 0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x75, 0x08, 0x43,
  0x34, 0x12, 0xe2, 0x34, 0x92, 0x6d, 0x45, 0x52, 0x87, 0x48, 0x0f, 0x30,
  0x09, 0xc7, 0x0a, 0x60, 0x92, 0xd8, 0x0c, 0xc4, 0x85, 0xdb, 0x13, 0xe1,
  0x23, 0x74, 0x6e, 0x44, 0x52, 0x87, 0x48, 0x0f, 0x30, 0x09, 0xc7, 0x0a,
  0x60, 0x92, 0xd8, 0x0c, 0xc4, 0x75, 0x1b, 0x14, 0xe1, 0x23, 0xb5, 0x6e,
  0x5b, 0x84, 0x8f, 0xd0, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x04, 0x94, 0xa8, 0x40,
  0x01, 0x0b, 0x94, 0x61, 0xc0, 0x0c, 0x00, 0x5d, 0xe5, 0x51, 0x04, 0x23,
  0x00, 0x25, 0x40, 0xc3, 0x08, 0xc0, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfe,
  0x01, 0x00, 0x00, 0x00, 0x33, 0x11, 0x00, 0xf0, 0x80, 0xc2, 0x4c, 0xc4,
  0x1c, 0x00, 0x0f, 0x28, 0x10, 0x1d, 0x14, 0x60, 0x3b, 0x83, 0x63, 0x06,
  0x66, 0x40, 0x01, 0x00, 0x86, 0x0d, 0x88, 0x22, 0x00, 0x80, 0x11, 0x03,
  0x03, 0x00, 0x41, 0x30, 0xf8, 0xde, 0xe0, 0x49, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xe0, 0x83, 0x03, 0x28, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04,
  0x83, 0x2f, 0x0e, 0x22, 0x66, 0xcf, 0xc3, 0xb1, 0x06, 0x6b, 0x30, 0x6c,
  0x40, 0x04, 0x04, 0x00, 0xec, 0x79, 0x40, 0xd8, 0xa0, 0x0d, 0x86, 0x0d,
  0x88, 0x80, 0x00, 0x80, 0x3d, 0x0f, 0x49, 0x1b, 0xa4, 0xc1, 0xb0, 0x01,
  0x11, 0x10, 0x00, 0xb0, 0xe7, 0x41, 0x71, 0x03, 0x37, 0xa0, 0x00, 0x00,
  0x7b, 0x1e, 0x18, 0x38, 0x88, 0x03, 0x0a, 0x00, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x69, 0x40, 0x07, 0x58, 0x33, 0x62, 0xe0, 0x00, 0x20,
  0x08, 0x06, 0x63, 0x80, 0x07, 0x58, 0x40, 0x08, 0x57, 0x24, 0x49, 0x91,
  0xb5, 0x9d, 0x61, 0x9b, 0x83, 0x39, 0xa0, 0x08, 0x00, 0xc3, 0x06, 0x84,
  0x10, 0x00, 0x00, 0x86, 0x03, 0x01, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x86, 0x13, 0x75, 0x88, 0xf4, 0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x89,
  0xcd, 0x40, 0x5c, 0x96, 0x23, 0x75, 0x88, 0xf4, 0x00, 0x93, 0x70, 0xac,
  0x00, 0x26, 0x89, 0xcd, 0x40, 0x5c, 0xb5, 0xe9, 0x48, 0x1d, 0x22, 0x3d,
  0xc0, 0x24, 0x1c, 0x2b, 0x80, 0x49, 0x62, 0x33, 0x10, 0x97, 0x6d, 0x28,
  0xc7, 0x03, 0x60, 0x8b, 0x03, 0x0c, 0x36, 0x23, 0xf8, 0x34, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x04, 0x94, 0xa8, 0x40, 0x01, 0x0b, 0x94, 0x61, 0xc0, 0x0c, 0x00, 0x5d,
  0xe5, 0x51, 0x04, 0x23, 0x00, 0x25, 0x40, 0xc3, 0x08, 0xc0, 0x18, 0x01,
  0x08, 0x82, 0x20, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x33, 0x11, 0x00, 0xf0,
  0x80, 0xc2, 0x4c, 0xc4, 0x1c, 0x00, 0x0f, 0x28, 0x50, 0x1d, 0x14, 0x60,
  0x3b, 0xc3, 0x73, 0x06, 0x67, 0x40, 0x01, 0x00, 0x86, 0x0d, 0x88, 0x22,
  0x00, 0x80, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xf8, 0xe0, 0xe0, 0x49,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x8b, 0x03, 0x28, 0x19, 0x31,
  0x30, 0x00, 0x10, 0x04, 0x83, 0x4f, 0x0e, 0x22, 0x66, 0xcf, 0xc3, 0xc1,
  0x06, 0x6c, 0x30, 0x6c, 0x40, 0x04, 0x04, 0x00, 0xec, 0x79, 0x40, 0xda,
  0xc0, 0x0d, 0x86, 0x0d, 0x88, 0x80, 0x00, 0x80, 0x3d, 0x0f, 0x89, 0x1b,
  0xa8, 0xc1, 0xb0, 0x01, 0x11, 0x10, 0x00, 0xb0, 0xe7, 0x41, 0x79, 0x83,
  0x37, 0xa0, 0x00, 0x00, 0x7b, 0x1e, 0x98, 0x38, 0x90, 0x03, 0x0a, 0x00,
  0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x69, 0x50, 0x07, 0x58, 0x33,
  0x62, 0xe0, 0x00, 0x20, 0x08, 0x06, 0x63, 0x90, 0x07, 0x58, 0x40, 0x08,
  0x57, 0x24, 0x45, 0x91, 0xb5, 0x9d, 0x81, 0xa3, 0x03, 0x3a, 0xa0, 0x08,
  0x00, 0xc3, 0x06, 0x84, 0x10, 0x00, 0x00, 0x86, 0x03, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x96, 0x13, 0x75, 0x88, 0xf4, 0x00, 0x93, 0x70,
  0xac, 0x00, 0x26, 0x89, 0xcd, 0x40, 0x5c, 0xa6, 0x23, 0x75, 0x88, 0xf4,
  0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x89, 0xcd, 0x40, 0x5c, 0xb5, 0xed,
  0x48, 0x1d, 0x22, 0x3d, 0xc0, 0x24, 0x1c, 0x2b, 0x80, 0x49, 0x62, 0x33,
  0x10, 0x97, 0x6d, 0x28, 0xc7, 0x03, 0x60, 0x8b, 0x03, 0x0c, 0x96, 0x42,
  0x00, 0xd3, 0x14, 0x19, 0x8d, 0xe0, 0xd3, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
